//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.15

use super::sea_orm_active_enums::GroupFilterCriteria;
use super::sea_orm_active_enums::GroupFilterCriteriaType;
use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "auth_group_filter_rule")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub filter_id: Option<i32>,
    pub criteria: GroupFilterCriteria,
    pub criteria_type: GroupFilterCriteriaType,
    pub criteria_value: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::auth_group_filter::Entity",
        from = "Column::FilterId",
        to = "super::auth_group_filter::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    AuthGroupFilter,
}

impl Related<super::auth_group_filter::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::AuthGroupFilter.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
